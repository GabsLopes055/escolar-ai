image: ubuntu

stages:
  - build
  - deploy

variables:
  DOCKER_IMAGE_NAME: "togotrip-frontend"
  GCR_IMAGE_NAME: "southamerica-east1-docker.pkg.dev/inbound-rune-421414/togotrip-frontend/togotrip-frontend:v1"

build:
  stage: build
  image: docker:latest
  services:
    - google/cloud-sdk:alpine
    - docker:latest
  script:
    - yum update && yum install -y curl gnupg
    - echo "deb [signed-by=/usr/share/keyrings/cloud.google.gpg] http://packages.cloud.google.com/apt cloud-sdk main" | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list
    - curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key --keyring /usr/share/keyrings/cloud.google.gpg add -
    - yum update && yum install -y google-cloud-sdk
    - gcloud config set project inbound-rune-421414
    - echo "$GCP_SERVICE_ACCOUNT_KEY" > service_account.json
    - gcloud auth activate-service-account --key-file service_account.json
    - gcloud auth configure-docker southamerica-east1-docker.pkg.dev --quiet
    - docker build -t southamerica-east1-docker.pkg.dev/inbound-rune-421414/togotrip-frontend/togotrip-frontend:v1 .
    - docker push southamerica-east1-docker.pkg.dev/inbound-rune-421414/togotrip-frontend/togotrip-frontend:v1




# deploy:
#   stage: deploy
#   image: google/cloud-sdk:alpine
#   script:
#     - gcloud config set project inbound-rune-421414
#     - gcloud auth login
#     - gcloud auth activate-service-account --key-file $GCP_SERVICE_ACCOUNT_KEY
#     - gcloud run deploy togotrip-frontend --image=$GCR_IMAGE_NAME --platform=managed --region=southamerica-east1 --allow-unauthenticated
