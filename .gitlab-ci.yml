image: ubuntu:latest

stages:
  - build
  - deploy

variables:
  DOCKER_IMAGE_NAME: "togotrip-frontend"
  GCR_IMAGE_NAME: "southamerica-east1-docker.pkg.dev/inbound-rune-421414/togotrip-frontend/togotrip-frontend:v1"

build:
  stage: build
  image: docker:latest
  services:
    - google/cloud-sdk:alpine
    - docker:latest
  script:
    - apk add --no-cache python3 # Instala o Python3
    - python3 --version # Verifica se o Python3 está instalado corretamente
    - apk --no-cache add curl
    - curl -O https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-sdk-359.0.0-linux-x86_64.tar.gz # Baixa o pacote do Google Cloud SDK
    - tar zxvf google-cloud-sdk-359.0.0-linux-x86_64.tar.gz # Extrai o pacote
    - ./google-cloud-sdk/install.sh --quiet --disable-prompts # Instala o SDK
    - source ~/.bashrc # Atualiza as variáveis de ambiente
    - gcloud config set project inbound-rune-421414
    - echo "$GCP_SERVICE_ACCOUNT_KEY" > service_account.json
    - gcloud auth activate-service-account --key-file service_account.json
    - gcloud auth configure-docker southamerica-east1-docker.pkg.dev --quiet
    - docker build -t southamerica-east1-docker.pkg.dev/inbound-rune-421414/togotrip-frontend/togotrip-frontend:v1 .
    - docker push southamerica-east1-docker.pkg.dev/inbound-rune-421414/togotrip-frontend/togotrip-frontend:v1






# deploy:
#   stage: deploy
#   image: google/cloud-sdk:alpine
#   script:
#     - gcloud config set project inbound-rune-421414
#     - gcloud auth login
#     - gcloud auth activate-service-account --key-file $GCP_SERVICE_ACCOUNT_KEY
#     - gcloud run deploy togotrip-frontend --image=$GCR_IMAGE_NAME --platform=managed --region=southamerica-east1 --allow-unauthenticated
